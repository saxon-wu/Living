version: "3.7"

volumes:
  postgresql-data:
    external: true
  nginx:
    external: true
  try-node_modules:
    external: true

services:
  # living-nginx:
  #   image: nginx:1.17.9-alpine
  #   container_name: living-nginx
  #   volumes:
  #     - $PWD/reactjs:/usr/share/nginx/html
  #     - $PWD/docker-data/nginx/logs:/var/log/nginx
  #     - $PWD/docker-data/nginx/conf.d:/etc/nginx/conf.d
  #     - $PWD/docker-data/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     # - $PWD/docker-data/nginx/localhost.cert:/etc/nginx/localhost.cert
  #     # - $PWD/docker-data/nginx/localhost.key:/etc/nginx/localhost.key
  #     # - $PWD/docker-data/media:/media
  #   restart: on-failure
  #   # depends_on:
  #   # - living-nestjs
  #   ports:
  #     - 80:80
  #     - 443:443

  # living-ant-nginx:
  #   image: nginx:1.17.9-alpine
  #   container_name: living-ant-nginx
  #   volumes:
  #     - $PWD/ant/dist:/usr/share/nginx/html
  #     - $PWD/docker-data/nginx/logs:/var/log/nginx
  #     - $PWD/docker-data/nginx/conf.d:/etc/nginx/conf.d
  #     - $PWD/docker-data/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   restart: on-failure
  #   # depends_on:
  #   # - living-ant
  #   ports:
  #     - 7000:80

  # living-ant:
  #   build:
  #     context: ./ant
  #     dockerfile: $PWD/ant/Dockerfile
  #   container_name: living-ant
  #   environment:
  #     - API_URL=http://app.dev/api/
  #     # - API_URL_BROWSER=/api
  #     # - NUXT_ENV_DEBUG=true
  #     # - NODE_ENV=development
  #     # - HOST=0.0.0.0
  #     # - DEBUG=nuxt:*
  #     # - REACT_APP_ENV=dev
  #     # - MOCK=none
  #   volumes:
  #     - $PWD/ant:/app
  #     # - /app/node_modules/
  #   restart: on-failure
  #   ports:
  #     - 8000:8000
  #   # depends_on:
  #   #   - living-stream
  #   command:
  #     npm run start:dev

  # living-reactjs:
  #   build:
  #     context: ./reactjs
  #     dockerfile: ./reactjs/Dockerfile
  #   container_name: living-reactjs
  #   environment:
  #     - API_URL=http://app.dev/api/
  #     - API_URL_BROWSER=/api
  #     - NUXT_ENV_DEBUG=true
  #     - NODE_ENV=development
  #     - HOST=0.0.0.0
  #     - DEBUG=nuxt:*
  #   volumes:
  #     - ./reactjs:/app
  #     - /app/node_modules/
  #   restart: on-failure
  #   depends_on:
  #     - living-stream
  #   command:
  #     npm run dev

  # living-minio:
  #   container_name: living-minio
  #   image: minio/minio
  #   command: server /data
  #   # user: ${CURRENT_UID}
  #   volumes:
  #     - $PWD/docker-data/minio/data:/data
  #     - $PWD/docker-data/minio/config:/root/.minio
  #     # - $PWD/docker-data/etc/localtime:/etc/localtime:ro
  #   environment:
  #     MINIO_ACCESS_KEY: admin
  #     MINIO_SECRET_KEY: 12345678
  #   ports:
  #     - "9000:9000"

  living-postgresql:
    image: postgres:12.2-alpine
    container_name: living-postgresql
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=living
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # living-adminer:
  #   image: adminer
  #   container_name: living-adminer
  #   restart: on-failure
  #   environment:
  #     ADMINER_DEFAULT_SERVER: living-postgresql
  #   depends_on:
  #     - living-postgresql
  #   ports:
  #     - "8080:8080"

  living-nestjs:
    build:
      context: ./nestjs
      dockerfile: $PWD/nestjs/Dockerfile
    container_name: living-nestjs
    env_file:
      - ./nestjs/.development.env
    environment:
      - NODE_ENV=development
      - TYPEORM_HOST=living-postgresql
    volumes:
      - ./nestjs:/app
      - try-node_modules:/app/node_modules
      # - $PWD/docker-data/npm/_libvips:/root/.npm/_libvips
    ports:
      - "3600:3600"
    restart: on-failure
    command:
      npm run start:dev